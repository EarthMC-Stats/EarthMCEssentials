plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = "${project.mod_version}-${project.minecraft_version}+" as Object
group = project.maven_group

def localProps = new Properties()
localProps.load(new FileInputStream(rootProject.file("local.properties")))

repositories {
	mavenCentral()

	maven {
		name = "GitHubPackages"
		url = uri("https://maven.pkg.github.com/earthmc-toolkit/earthmc-wrapper")
		credentials {
			username = localProps.getProperty("USERNAME")
			password = localProps.getProperty("GITHUB_TOKEN")
		}
	}

	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation include("net.kyori:adventure-platform-fabric:${project.adventure_fabric_version}")

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "com.google.code.gson")
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Libraries to include in remapJar
	include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"

	api include("io.github.emcw:emc-wrapper:${project.wrapper_version}") {
		exclude(group: "org.jetbrains")
		exclude(group: "com.google.code.gson")
	}

	include 'com.google.code.gson:gson:2.10.1'

	compileOnly 'org.jetbrains:annotations:24.0.1'
	annotationProcessor 'org.jetbrains:annotations:24.0.1'

	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
}

java {
	withSourcesJar()
}